#!/usr/bin/env bash
# https://github.com/jonschipp/nagios-plugins
# Jon Schipp

OK=0
WARNING=1
CRITICAL=2
UNKNOWN=3
AGENT_CONTROL=/var/ossec/bin/agent_control
OSSEC_CONTROL=/var/ossec/bin/ossec-control

usage()
{
    cat <<EOF
Check for status of OSSEC agents and server.
This script should be run on the OSSEC server.

     Options:
	-a <name>       Check status of agent or list of comma separated agents, "agent1,agent2".
	-c <int>        Critical threshold for number of inactive agents
	-l              List all agents
	-s <service>    Check status of OSSEC server processes. Use ``-s all'' to check all.
			To exclude a service(s) e.g pass as comma separated argument i.e. ``-s "execd,maild''
	-w              Warning threshold for number of inactive agents

Usage: $0 -a "server1,server2,station3"
EOF
}

argcheck() {
    if test $ARGC -lt $1; then
	echo "UNKNOWN - Missing arguments! Use \`\`-h'' for help."
	exit $UNKNOWN
    fi
}

CRIT=0
WARN=0
CHECK_AGENT=0
CHECK_THRESHOLD=0
LIST_AGENTS=0
SERVER_CHECK=0
EXCLUDE=all
ACTIVE=0
INACTIVE=0
NEVER=0
TOTAL=0
DISCONNECTED=0
CONNECTED=0
NEVERCONNECTED=0
UNKNOWN=0
ARGC=$#

if test ! -x $AGENT_CONTROL -a ! -x $OSSEC_CONTROL; then
    echo "UNKNOWN - OSSEC binaries not found."
    exit $UNKNOWN
fi

argcheck 1

while getopts "ha:c:ls:v:w:" OPTION
do
    case $OPTION in
	h)
	    usage
	    ;;
	a)
	    CHECK_AGENT=1
	    AGENT="$OPTARG"
	    ;;
	c)
	    CHECK_THRESHOLD=1
	    CRIT="$OPTARG"
	    ;;
	l)
	    LIST_AGENTS=1
	    ;;
	s)
	    SERVER_CHECK=1
	    EXCLUDE=$(echo $OPTARG | sed 's/,/|/g')
	    ;;
	v)
	    CHECK_THRESHOLD=1
	    VOL="$OPTARG"
	    ;;
	w)
	    WARN="$OPTARG"
	    ;;
	\?)
	    exit 1
	    ;;
    esac
done

if test $LIST_AGENTS -eq 1; then
    $AGENT_CONTROL -l
    exit 0
elif test $SERVER_CHECK -eq 1; then
    if $OSSEC_CONTROL status | grep -v -E "$EXCLUDE" | grep "not running" >/dev/null; then
	echo "CRITICAL - An OSSEC service is not running!"
	exit $CRITICAL
    else
	echo "OK - All OSSEC services running"
	exit $OK
    fi
fi

if test $CHECK_AGENT -eq 1; then
    for host in $(echo $AGENT | sed 's/,/ /g');
    do
	RESULT=$($AGENT_CONTROL -l | grep ${host},)
	case $RESULT in
	    *Disconnected)
		echo "Agent $host is not connected!"
		DISCONNECTED=$((DISCONNECTED+1))
		;;
	    *Active)
		echo "Agent $host is connected"
		CONNECTED=$((CONNECTED+1))
		;;
	    *Never*)
		echo "Agent $host has never connected to the server: $RESULT"
		NEVERCONNECTED=$((NEVERCONNECTED+1))
		;;
	    *)
		echo "Unknown status or agent: $host"
		UNKNOWN=$((UNKNOWN+1))
		;;
	esac
    done
    if test $DISCONNECTED -gt 0 -o $NEVERCONNECTED -gt 0 -o $UNKNOWN -gt 0; then
	echo "-> $DISCONNECTED disconnected agent(s), $NEVERCONNECTED never connected agent(s), and $UNKNOWN agent(s) with unknown status (possible agent name typo?)."
	exit $CRITICAL
    else
	echo "OK - All requested ($CONNECTED) agents are connected to the server!"
	exit $OK
    fi
fi

if test $CHECK_THRESHOLD -eq 1; then
    ACTIVE=$($AGENT_CONTROL -l | grep Active | wc -l)
    INACTIVE=$($AGENT_CONTROL -l | grep Disconnected | wc -l)
    NEVER=$($AGENT_CONTROL -l | grep Never | wc -l)
    TOTAL=$($AGENT_CONTROL -l | wc -l)
    if test $INACTIVE -gt $CRIT; then
	echo "CRITICAL - $INACTIVE of $TOTAL agents inactive! Active: $ACTIVE"
	exit $CRITICAL
    elif test $INACTIVE -gt $WARN; then
	echo "WARNING - $INACTIVE of $TOTAL agents inactive! Active: $ACTIVE"
	exit $WARNING
    else
	echo "OK - Active: $ACTIVE - Inactive: $INACTIVE - Never connected:$NEVER - Total: $TOTAL"
    fi
fi

exit $OK
