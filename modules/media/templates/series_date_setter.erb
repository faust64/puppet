#!/bin/sh

DEBUG=verbose
<% if @sickbeard != false -%>baseurl=<%=@sickbeard%>
<% else -%>baseurl=<%=@medusa%>
<% end -%>IDXFILE=/tmp/idx.$$
TMPFILE=/tmp/list.$$
SERIES_ROOT=<%=@media_root%>/media/Series
WGET="wget --no-check-certificate --no-proxy"

if ! $WGET $baseurl/home/ -O $IDXFILE >/dev/null 2>&1; then
    echo "Failed to retrieve series index" >&2
    rm -f $IDXFILE
    exit 2
fi

<% if @sickbeard == false -%>APIKEY=`grep api-key "$IDXFILE"  | sed 's|.* api-key="\([^"]*\)".*|\1|'`
if test -z "$APIKEY" >/dev/null; then
    echo "Failed resolving API Key" >&2
    rm -f $IDXFILE
    exit 2
fi

<% end -%>while test "$1"
do
    cleaned=`echo "$1" | sed -e 's|(|\\(|g' -e 's|)|\\)|g'`
    if test -z "$match"; then
	match="($cleaned"
    else
	match="$match|$cleaned"
    fi
    shift
done
if test "$match"; then
    match="$match)"
fi

<% if @sickbeard != false -%>grep '<td class="tvShow">' $IDXFILE | sed 's|.*displayShow?show=\([0-9]*\)">\([^<]*\)<.*|showid=\1 showtitle="\2"|' | while read line
    do
	eval $line
	showtitle=`echo "$showtitle" | sed -e "s|&#39;|'|g" -e "s|&amp;|\&|g"`
	if test -z "$showid" -o -z "$showtitle"; then
	    continue
	elif test "$match"; then
	    if ! echo "$showtitle" | grep -E "$match"; then
		continue
	    fi
	fi >/dev/null

	if test -d "$SERIES_ROOT/$showtitle"; then
	    if ! $WGET "$baseurl/home/displayShow?show=$showid" -O $TMPFILE >/dev/null 2>&1; then
		echo "Failed getting $showtitle index" >&2
		continue
	    fi
<% else -%>get_next_page()
{
    $WGET --header "x-api-key: $APIKEY" "$baseurl/api/v2/series?page=$idxpage" -O "$IDXFILE" 2>/dev/null
    if grep -E '^\[\]$' "$IDXFILE" >/dev/null; then
	return 1
    fi
    #echo got page $idxpage
    idxpage=`expr $idxpage + 1`
    return 0
}

idxpage=1
while get_next_page
do
    #echo page `expr $idxpage - 1` has:
    #cat "$IDXFILE" | jq '.[] | { title: .title, idxname: .indexer , showidtvdb: .id.tvdb, showidimdb: .id.imdb, showidslug: .id.slug, showidtrackt: .id.trackt }'
    cat "$IDXFILE" | jq -r '.[] | .id.slug' | while read idxcomp
	do
	    if echo "$idxcomp" | grep ^tvdb; then
		idxname=tvdb
	    elif echo "$idxcomp" | grep ^tmdb; then
		idxname=tmdb
	    elif echo "$idxcomp" | grep ^imdb; then
		idxname=imdb
	    elif echo "$idxcomp" | grep ^tvmaze; then
		idxname=tvmaze
	    else
		echo "WARNING: unrecognized indexer in $idxcomp" >&2
		continue
	    fi >/dev/null
	    showid=`echo "$idxcomp" | sed "s|^$idxname||"`
	    showtitle=`cat $IDXFILE | jq -r ".[] | select(.id.slug == \"$idxcomp\") | .title" | sed -e "s|&#39;|'|g" -e "s|&amp;|\&|g"`
	    if test -z "$showid" -o -z "$showtitle"; then
		continue
	    elif test "$match"; then
		if ! echo "$showtitle" | grep -E "$match"; then
		    continue
		fi >/dev/null
	    fi
	    if test ! -d "$SERIES_ROOT/$showtitle"; then
		echo "WARNING: $showtitle not found locally - could be purged from medusa?" >&2
		continue
	    elif ! $WGET --header "x-api-key: $APIKEY" "$baseurl/api/v2/series/$idxname$showid/episodes?limit=1000" -O $TMPFILE 2>/dev/null; then
		#WARNING: as of season 31, there are less than 700 The Simpsons episodes ...
		# but this won't hold forever ...
		echo "Failed getting $showtitle index" >&2
		continue
	    fi >/dev/null
<% end -%>      cd "$SERIES_ROOT/$showtitle"
<% if @emby != false -%>	    laste=0 lasts=0
<% end -%>	    ls | while read episode
	    do
<% if @emby != false -%>		if echo "$episode" | grep -E '\.bif$' >/dev/null; then
		    continue
		elif echo "$episode" | grep -E '^\[[0-9][0-9]x[0-9-]*\] ' >/dev/null; then
<% else -%>		if echo "$episode" | grep -E '^\[[0-9][0-9]x[0-9-]*\] ' >/dev/null; then
<% end -%>		    eval `echo "$episode" | sed 's|.*\[0*\([0-9][0-9]*\)x0*\([0-9]*\).*|s=\1 e=\2|'`
		    test -z "$e" && echo "$episode" | grep "x00\]" >/dev/null && e=0
		    if test -z "$s" -o -z "$e"; then
			echo "Failed to parse $episode name" >&2
			continue
		    elif ! test "$s" -ge 0 -a "$e" -gt 0; then
			echo "Failed to parse $episode name" >&2
			continue
<% if @emby != false -%>		    elif test "$e" -eq "$laste" -a "$s" -eq "$lasts"; then
			continue
<% end -%>		    fi
<% if @sickbeard != false -%>		    datestr=`grep -A11 "class=\"epCheck\" id=\"${s}x$e\" " $TMPFILE | grep 'class="col-airdate"' | sed -e 's|.*airdate">\([^<]*\)<.*|\1|' -e 's|-||g' | head -1`
<% else -%>		    datestr=`cat $TMPFILE | jq -r ".[] | select(.[\"identifier\"] | test(\"s0*${s}e0*$e\"))" | jq -r ".[\"airDate\"]" | sed 's|\([0-9]*\)-\([0-9]*\)-\([0-9]*\)[^0-9].*|\1\2\3|' | head -1`
<% end -%><% if @emby != false -%> 		    if echo "$datestr" | grep -E '^[0-9][0-9]*$' >/dev/null; then
			if test "$laste" -eq 0 -a "$lasts" -eq 0; then
			    for f in banner clearart clearlogo fanart landscape logo poster
			    do
				for x in png jpg
				do
				    if test -s "./$f.$x" >/dev/null; then
					echo "[$showtitle/$f.$x] $datestr series assets"
					touch -mhd "$datestr" "./$f.$x"
				    fi
				done
			    done
			fi
		    fi
<% end -%>		    epstr=${s}x$e
		elif echo "$episode" | grep -E '^\[[1-2][0-9][0-9][0-9].[0-9][0-9].[0-9][0-9]\] ' >/dev/null; then
		    datestr=`echo "$episode" | sed 's|^\[\([1-2][0-9][0-9][0-9]\).\([0-9][0-9]\).\([0-9][0-9]\)\].*|\1\2\3|'`
		    epstr=$datestr
		else
		    continue
		fi
		if echo "$datestr" | grep -E '^[0-9][0-9]*$' >/dev/null; then
<% if @emby != false -%>		    if test "$lasts" -ne "$s" -o \( "$s" -eq 0 -a "$laste" -eq 0 \); then
			if test $s -eq 0; then
			    if ls ./season-specials* >/dev/null 2>&1; then
				echo "[$showtitle/specials] $datestr specials assets"
				touch -mhd $datestr ./season-specials*
			    fi
			else
			    if test "$s" -le 10; then
				ds=0$s
			    else
				ds=$s
			    fi
			    if ls ./season$ds* >/dev/null 2>&1; then
				echo "[$showtitle/season$s] $datestr season assets"
				touch -mhd $datestr ./season$ds*
			    fi
			fi
		    fi
		    if test -s ./tvshow.nfo; then
			touch -md $datestr ./tvshow.nfo
		    fi
<% end -%>		    if test -d "$episode"; then
			find "$episode" | while read c
			    do
				cur=`date -d @$(stat --format %Y "$c") +%Y%m%d`
				if test "$datestr" != "$cur"; then
				    if test "$DEBUG" = verbose; then
					echo "[$showtitle/$epstr] $datestr $c"
				    fi
				    touch -mhd $datestr "$c"
				fi
			    done
		    else
			matchep=`echo "$episode" | sed 's|^\(.*\[[0-9exs]*\).*|\1|'`
			find "$matchep"* | while read c
			    do
				cur=`date -d @$(stat --format %Y "$c") +%Y%m%d`
				if test "$datestr" != "$cur"; then
				    if test "$DEBUG" = verbose; then
					echo "[$showtitle/$epstr] $datestr $c"
				    fi
				    touch -mhd $datestr "$c"
				fi
			    done
		    fi
		    touch -md $datestr .
		    laste=$e lasts=$s
		elif test "$DEBUG" = verbose; then
		    echo "[$showtitle/$epstr] ignoring invalid date $datestr for $episode"
		fi
	    done
	    rm -f $TMPFILE
<% if @sickbeard != false -%>	fi
    done
<% else -%>	done
done
<% end -%>
rm -f $IDXFILE

exit 0
