#!/usr/bin/env python
#-*- coding: utf-8 -*-

"""
=head1 NAME

riak_vnode_get_put - Plugin to monitor the number of get/put operations coordinated by vnodes on this node.

=head1 AUTHOR

Hiroaki Sano

=head1 CONFIGURATION

No configuration

=head1 LICENSE

MIT License

=cut
"""

import sys
import requests
import os

ca = os.getenv('riak_ca','False')
host = os.getenv('riak_host','127.0.0.1')
port = os.getenv('riak_port',8098)
path = os.getenv('riak_path','stats')
proto = os.getenv('riak_proto','http')
basic = os.getenv('riak_basic',False)

def autoconf():
    pass

def get_stats():
    if basic != False:
        r = requests.get("{}://{}@{}:{}/{}".format(proto,basic,host,port,path), verify=ca)
    else:
        r = requests.get("{}://{}:{}/{}".format(proto,host,port,path), verify=ca)
    return r.json()

def config():
    print ('graph_title Riak vnode_gets/puts')
    print ('graph_args --base 1000 -l 0')
    print ('graph_vlabel operations/second')
    print ('graph_category Riak')
    print ('graph_period second')
    print ('graph_info This graph shows the number of Riak get/put operations')

    print ('vnode_gets.label vnode gets')
    print ('vnode_gets.type DERIVE')
    print ('vnode_gets.max 1000000')
    print ('vnode_gets.min 0')
    print ('vnode_gets.info The number of get operations')

    print ('vnode_puts.label vnode puts')
    print ('vnode_puts.type DERIVE')
    print ('vnode_puts.max 1000000')
    print ('vnode_puts.min 0')
    print ('vnode_puts.info The number of put operations')


def main():
    if len(sys.argv) > 1:
        command = sys.argv[1]
    else:
        command = ''

    if command == 'autoconf':
        autoconf()
    elif command == 'config':
        config()
    else:
        ret = get_stats()
        print ('vnode_gets.value %s') % ret['vnode_gets_total']
        print ('vnode_puts.value %s') % ret['vnode_puts_total']

if __name__ == '__main__':
    main()
